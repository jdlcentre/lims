/*
 * Copyright Curtin University, 2015.
 */
// DO NOT MODIFY THIS FILE BY HAND. IT WAS GENERATED BY generate_orm_files.py
package au.edu.curtin.lims.domain;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name = "faction")
@SequenceGenerator(name = "faction_faction_id_seq", sequenceName = "faction_faction_id_seq", allocationSize = 1)
public class Faction implements Comparable<Faction> {
    private int factionId;

    private String factionName;

    private Set<Authority> authorities = new HashSet<Authority>();

    private Set<Person> people = new HashSet<Person>();

    public Faction() { }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "faction_faction_id_seq")
    @Column(name = "faction_id", nullable = false)
    public Integer getFactionId() {
        return this.factionId;
    }
    
    @SuppressWarnings("unused")
    private void setFactionId(Integer factionId) {
        this.factionId = factionId;
    }

    @Column(name = "faction_name", nullable = false, length = 50)
    public String getFactionName() {
        return this.factionName;
    }
    
    public void setFactionName(String factionName) {
        this.factionName = factionName;
    }

    @ManyToMany(
            fetch = FetchType.LAZY,
            cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    @JoinTable(
        name = "faction_authority_mm",
        joinColumns = { @JoinColumn(name = "faction_id") },
        inverseJoinColumns = { @JoinColumn(name = "authority_id") })
    public Set<Authority> getAuthorities() {
        return this.authorities;
    }
    
    public void setAuthorities(Set<Authority> authorities) {
        this.authorities = authorities;
    }

    @ManyToMany(
            fetch = FetchType.LAZY,
            cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    @JoinTable(
        name = "faction_person_mm",
        joinColumns = { @JoinColumn(name = "faction_id") },
        inverseJoinColumns = { @JoinColumn(name = "person_id") })
    public Set<Person> getPeople() {
        return this.people;
    }
    
    public void setPeople(Set<Person> people) {
        this.people = people;
    }

    @Override
    public int compareTo(Faction o) {
        return this.getFactionId().compareTo(o.getFactionId());
    }
}
