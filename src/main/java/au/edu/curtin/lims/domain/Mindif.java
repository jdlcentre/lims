/*
 * Copyright Curtin University, 2015.
 */
// DO NOT MODIFY THIS FILE BY HAND. IT WAS GENERATED BY generate_orm_files.py
package au.edu.curtin.lims.domain;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name = "mindif")
@SequenceGenerator(name = "mindif_mindif_id_seq", sequenceName = "mindif_mindif_id_seq", allocationSize = 1)
public class Mindif implements Comparable<Mindif> {
    private int mindifId;

    private Geosample geosample;

    private String measurementGuid;

    private String softwareVersion;

    private int viewFieldUm;

    private int imageWidthPx;

    private int imageHeightPx;

    private int sampleDiameterUm;

    private Date collectionDate;

    private List<MindifField> mindifFields;

    private List<MineralMassAndColour> mineralMassAndColours;

    public Mindif() { }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "mindif_mindif_id_seq")
    @Column(name = "mindif_id", nullable = false)
    public Integer getMindifId() {
        return this.mindifId;
    }
    
    @SuppressWarnings("unused")
    private void setMindifId(Integer mindifId) {
        this.mindifId = mindifId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "geosample_id")
    public Geosample getGeosample() {
        return geosample;
    }
    
    public void setGeosample(Geosample geosample) {
        this.geosample = geosample;
    }

    @Column(name = "measurement_guid", nullable = false, length = 32)
    public String getMeasurementGuid() {
        return this.measurementGuid;
    }
    
    public void setMeasurementGuid(String measurementGuid) {
        this.measurementGuid = measurementGuid;
    }

    @Column(name = "software_version", nullable = false, length = 16)
    public String getSoftwareVersion() {
        return this.softwareVersion;
    }
    
    public void setSoftwareVersion(String softwareVersion) {
        this.softwareVersion = softwareVersion;
    }

    @Column(name = "view_field_um", nullable = false, length = 16)
    public int getViewFieldUm() {
        return this.viewFieldUm;
    }
    
    public void setViewFieldUm(int viewFieldUm) {
        this.viewFieldUm = viewFieldUm;
    }

    @Column(name = "image_width_px", nullable = false, length = 16)
    public int getImageWidthPx() {
        return this.imageWidthPx;
    }
    
    public void setImageWidthPx(int imageWidthPx) {
        this.imageWidthPx = imageWidthPx;
    }

    @Column(name = "image_height_px", nullable = false, length = 16)
    public int getImageHeightPx() {
        return this.imageHeightPx;
    }
    
    public void setImageHeightPx(int imageHeightPx) {
        this.imageHeightPx = imageHeightPx;
    }

    @Column(name = "sample_diameter_um", nullable = false, length = 16)
    public int getSampleDiameterUm() {
        return this.sampleDiameterUm;
    }
    
    public void setSampleDiameterUm(int sampleDiameterUm) {
        this.sampleDiameterUm = sampleDiameterUm;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "collection_date", nullable = false, length = 16)
    public Date getCollectionDate() {
        return this.collectionDate;
    }
    
    public void setCollectionDate(Date collectionDate) {
        this.collectionDate = collectionDate;
    }

    @OneToMany(
        mappedBy = "mindif",
        fetch = FetchType.LAZY)
    @OrderBy("mindif_field_id")
    public List<MindifField> getMindifFields() {
        return this.mindifFields;
    }
    
    public void setMindifFields(List<MindifField> mindifFields) {
        this.mindifFields = mindifFields;
    }

    @OneToMany(
        mappedBy = "mindif",
        fetch = FetchType.LAZY)
    @OrderBy("mineral_mass_and_colour_id")
    public List<MineralMassAndColour> getMineralMassAndColours() {
        return this.mineralMassAndColours;
    }
    
    public void setMineralMassAndColours(List<MineralMassAndColour> mineralMassAndColours) {
        this.mineralMassAndColours = mineralMassAndColours;
    }

    @Override
    public int compareTo(Mindif o) {
        return this.getMindifId().compareTo(o.getMindifId());
    }
}
