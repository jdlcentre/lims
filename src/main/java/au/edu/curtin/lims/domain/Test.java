/*
 * Copyright Curtin University, 2015.
 */
// DO NOT MODIFY THIS FILE BY HAND. IT WAS GENERATED BY generate_orm_files.py
package au.edu.curtin.lims.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name = "test")
@SequenceGenerator(name = "test_testid_seq", sequenceName = "test_testid_seq", allocationSize = 1)
public class Test implements Comparable<Test> {
    private int testId;

    private String testname;

    //private String password;

    //private boolean enabled;

    //private Set<Authority> authorities = new HashSet<Authority>();

    //private Set<Faction> factions = new HashSet<Faction>();

    //private List<AnalysisRequest> analysisRequests;

    public Test() { }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "test_testid_seq")
    @Column(name = "testid", nullable = false)
    public Integer getTestId() {
        return this.testId;
    }
    
    @SuppressWarnings("unused")
    private void setTestId(Integer testId) {
        this.testId = testId;
    }

    @Column(name = "testname", nullable = false, length = 50)
    public String getTestname() {
        return this.testname;
    }
    
    public void setTestname(String testname) {
        this.testname = testname;
    }

    //@Column(name = "password", nullable = false, length = 60)
    //public String getPassword() {
    //    return this.password;
    //}
    
    //public void setPassword(String password) {
    //    this.password = password;
    //}

    //@Column(name = "enabled", nullable = false, length = 60)
    //public boolean getEnabled() {
    //    return this.enabled;
    //}
    
    //public void setEnabled(boolean enabled) {
    //    this.enabled = enabled;
    //}

    //@ManyToMany(
    //        fetch = FetchType.LAZY,
    //        cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    //@JoinTable(
    //    name = "test_authority_mm",
    //    joinColumns = { @JoinColumn(name = "test_id") },
    //    inverseJoinColumns = { @JoinColumn(name = "authority_id") })
    //public Set<Authority> getAuthorities() {
    //    return this.authorities;
    //}
    
    //public void setAuthorities(Set<Authority> authorities) {
    //    this.authorities = authorities;
    //}

//    @ManyToMany(
//            mappedBy = "people",
//            fetch = FetchType.LAZY,
//            cascade = { CascadeType.PERSIST, CascadeType.MERGE })
    //public Set<Faction> getFactions() {
    //    return this.factions;
    //}
    
    //public void setFactions(Set<Faction> factions) {
    //    this.factions = factions;
    //}

    //@OneToMany(
    //    mappedBy = "person",
    //    fetch = FetchType.LAZY)
    //@OrderBy("analysis_request_id")
    //public List<AnalysisRequest> getAnalysisRequests() {
    //    return this.analysisRequests;
    //}
    
    //public void setAnalysisRequests(List<AnalysisRequest> analysisRequests) {
    //    this.analysisRequests = analysisRequests;
    //}

    @Override
    public int compareTo(Test o) {
        return this.getTestId().compareTo(o.getTestId());
    }
}
